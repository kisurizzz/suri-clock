rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow users to read and write their own clock sessions
    match /clockSessions/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || isAdmin());
    }
    
    // Allow users to read and write their own completed sessions
    match /completedSessions/{sessionId} {
      allow read, write: if request.auth != null && 
        (sessionId.matches('.*_' + request.auth.uid) || isAdmin());
    }
    
    // Allow admins to read all user data
    match /users/{userId} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Vehicle management rules
    match /vehicles/{vehicleId} {
      // Allow all authenticated users to read vehicles
      allow read: if request.auth != null;
      // Allow only admins to create, update, delete vehicles
      allow write: if request.auth != null && isAdmin();
    }
    
    // Station management rules
    match /stations/{stationId} {
      // Allow all authenticated users to read stations
      allow read: if request.auth != null;
      // Allow only admins to create, update, delete stations
      allow write: if request.auth != null && isAdmin();
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 